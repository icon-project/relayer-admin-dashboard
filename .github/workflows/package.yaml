name: Build, package and release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build and release'
        required: true
      is_stable:
        description: 'Is this a stable release?'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build Next.js application
        run: bun run build

      - name: Output version information
        id: version
        run: |
          echo "DEBIAN_VERSION=${{ inputs.tag#v }}" >> $GITHUB_OUTPUT
          echo "DOCKER_TAG=${{ inputs.is_stable == 'true' && 'latest' || 'unstable' }}" >> $GITHUB_OUTPUT


      - name: Update control file version
        env:
          VERSION: ${{ steps.version.outputs.DEBIAN_VERSION }}
        run: |
          sed -i "s/^Version: .*/Version: ${VERSION}/" debian/DEBIAN/control
          cat debian/DEBIAN/control

      - name: Prepare Debian package structure
        run: |
          cp -rT .next/standalone debian/usr/share/dashboard
          cp -r .next/static debian/usr/share/dashboard/.next
          cp -r public debian/usr/share/dashboard

      - name: Build Debian package
        run: dpkg-deb --build debian relayer-admin-dashboard.deb

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build relayer image
        id: build-and-push-relayer
        uses: docker/build-push-action@v6
        with:
          context: https://github.com/icon-project/relayer-docker.git#:admin-dashboard
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            - DASHBOARD_VERSION=${{ inputs.tag }}
          tags: |
            iconcommunity/relayer-admin-dashboard:${{ steps.version.outputs.DOCKER_TAG }}
            iconcommunity/relayer-admin-dashboard:${{ inputs.tag }}

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign artifacts
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          COSIGN_YES: true
        run: |
          cosign sign --key env://COSIGN_PRIVATE_KEY iconcommunity/relayer-admin-dashboard:${{ steps.version.outputs.DOCKER_TAG }}
          cosign sign --key env://COSIGN_PRIVATE_KEY iconcommunity/relayer-admin-dashboard:${{ inputs.tag }}
          cosign sign-blob --key env://COSIGN_PRIVATE_KEY relayer-admin-dashboard.deb
          cosign public-key --key env://COSIGN_PRIVATE_KEY > cosign.pub

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            relayer-admin-dashboard.deb
            relayer-admin-dashboard.deb.sig
            cosign.pub
          tag_name: ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
          draft: false
          make_latest: ${{ github.ref_name == 'v*.*.*' && inputs.is_stable == 'true' }}
          prerelease: ${{ inputs.is_stable == 'false' }}
